{% extends 'base.html.j2' %}
{% block title %}Editing {{ item["title"] }} -{% endblock %}
{% block content %}
    <div class="container py-4">
        <div class="row align-items-md-stretch">
            <div class="col-md-6">
                <!--
title text
content long text
notes long text
grades checkboxes 7,8,9,10
        -->
                <!--Title-->
                <div class="input-group mb-3">
                    <span class="input-group-text" id="titleLabel">Title <a title="This means anyone at THS can see this field in it's entirety">(PUBLIC)</a></span>
                    <input type="text"
                           class="form-control"
                           placeholder="Title"
                           aria-label="Title"
                           aria-describedby="titleLabel"
                           id="title">
                </div>
                <!--Content-->
                <div class="input-group mb-3">
                    <span class="input-group-text" id="contentLabel">Content <a title="This means anyone at THS can see this field in it's entirety">(PUBLIC)</a></span>
                    <textarea class="form-control auto-resize"
                              placeholder="Content"
                              aria-label="Content"
                              aria-describedby="contentLabel"
                              style="resize: none"
                              id="content"></textarea>
                </div>
                <!--Notes-->
                <div class="input-group mb-3">
                    <span class="input-group-text" id="notesLabel">Notes <a title="Anyone who can edit this document - including admins - can see this">(EDITORS)</a></span>
                    <textarea class="form-control auto-resize"
                              placeholder="Notes"
                              aria-label="Notes"
                              aria-describedby="notesLabel"
                              style="resize: none"
                              id="notes"></textarea>
                </div>
                <!--Grades-->
                <div class="input-group mb-3">
                    <span class="input-group-text" id="gradesLabel">Grades <a title="This means anyone at THS can see this field in it's entirety">(PUBLIC)</a></span>
                    <div class="form-control">
                        {% for grade in bulletin_config.SUPPORTED_GRADES %}
                            <div class="form-check-inline">
                                <input class="form-check-input"
                                       type="checkbox"
                                       value="{{ grade }}"
                                       id="grade{{ grade }}">
                                <label class="form-check-label" for="grade{{ grade }}">{{ grade }}</label>
                            </div>
                        {% endfor %}
                    </div>
                </div>
                <!--Save-->
                <div class="input-group mb-3">
                    <button type="button" class="btn btn-primary" id="saveButton">Save</button>
                </div>
            </div>
            <div class="col-md-6">
                <div class="list-group">
                    <div class="list-group-item bulletin-item">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1 word-wrap" id="previewTitle"></h5>
                        </div>
                        <p class="mb-1 word-wrap" id="previewContent">

                        </p>
                        <small id="previewGrades"></small>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block scripts %}
    <script src="https://cdn.jsdelivr.net/gh/azoff/AutoResize@4a3f3c8/jquery.autoresize.min.js" integrity="sha384-3X08TGY2WowzEpDvZJo32TimV75qUCS55P8QNJqHXNpVOddjNgiZDIXqaBdVMOhr" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function () {
            $('.auto-resize').autoResize();
        });

        original_title = {{ item["title"]|tojson }};
        original_content = {{ item["content"]|tojson }};
        original_notes = {{ item["notes"]|tojson }};
        original_grades = {{ item["grades"]|tojson }};

        title.value = original_title;
        content.value = original_content;
        notes.value = original_notes;

        {% for grade in bulletin_config.SUPPORTED_GRADES %}
            {% if grade in item["grades"] or -1 in item["grades"] %}
                $('#grade{{ grade }}').prop('checked', true);
            {% endif %}
        {% endfor %}

        function selectedGrades() {
            var grades = [];
            {% for grade in bulletin_config.SUPPORTED_GRADES %}
                if ($('#grade{{ grade }}').prop('checked')) {
                    grades.push({{ grade }});
                }
            {% endfor %}
            return grades;
        }

        // save button send the original as well as the new data
        $('#saveButton').click(function () {
            $.ajax({
                url: '/api/item/edit/{{ item["id"] }}',
                type: 'POST',
                data: {
                    /*"old_data": {
                        "title": original_title,
                        "content": original_content,
                        "notes": original_notes,
                        "grades": original_grades
                    },*/
                    "title": JSON.stringify(title.value),
                    "content": JSON.stringify(content.value),
                    "notes": JSON.stringify(notes.value),
                    "grades": JSON.stringify(selectedGrades()),
                    "last_edit": {{ item["last_edit"]|tojson }}
                },
                success: function (data) {
                    window.location.reload();
                    console.log("Success! data:"+data);
                },
                error: function (data) {
                    // response content javascript
                    if (data.status === 409 && data.responseText === "newer_version_in_database") {
                        $('#saveButton').prop('disabled', true);
                        // add link to edit in new tab next to save
                        $('#saveButton').after('<a href="/item/edit/{{ item["id"] }}" target="_blank" class="btn btn-primary">Open new tab</a>');
                        $('body').css('background-color', '#54bef0');
                        // A newer version of this item is in the database. This page has been frozen as reference. You can choose the button at the bottom of the page to open a new tab to continue editing.
                        // add error message
                        $('#saveButton').parent().after('<div class="alert alert-danger" role="alert">A newer version of this item is in the database. This page has been frozen as reference. You can choose the button at the bottom of the page to open a new tab to continue editing.</div>');
                    } else {
                        alert("Unknown error!");
                        console.log(data);
                    }
                }
            });
        });
        
        var waitUntilPreview = 1000;
        var previewRate = 5000;

        function previewContent() {
            // get preview from /api/preview/ and write to preview div
            $.ajax({
                url: '/api/preview/',
                type: 'POST',
                data: {
                    "content": JSON.stringify(content.value)
                },
                success: function (data) {
                    console.log(data);
                    parsed = JSON.parse(data);
                    console.log(parsed);
                    $('#previewContent').html(parsed["preview"]);
                    waitUntilPreview = parsed["wait_until_preview"];
                    previewRate = parsed["preview_rate"];
                },
                error: function (data) {
                    alert("Unknown error!");
                    console.log(data);
                }
            });
        }

        //content.oninput wait 5 seconds then if no more input send request to /api/preview/
        var last_content_update = 0;
        var last_preview_fetch = 0;
        $("#content").on('input', function () {
            last_content_update = new Date().getTime();
            setTimeout(function () {
                if (new Date().getTime() - last_content_update > waitUntilPreview-50 || new Date().getTime() - last_preview_fetch > previewRate) {
                    previewContent();
                    last_preview_fetch = new Date().getTime();
                }
            }, waitUntilPreview);
        });

        function previewTitle() {
            $('#previewTitle').html(title.value);
        }

        $("#title").on('input', previewTitle);

        function previewGrades() {
            var grades = selectedGrades();
            /*
            def grades_string(grades: list):
                if -1 in grades:
                    return "<i>All Grades</i>"
                else:
                    return "<b>"+"</b>, <b>".join(map(str, grades))+"</b>"
            */
            if (grades.includes(-1)) {
                $('#previewGrades').html('<i>All Grades</i>');
            } else {
                $('#previewGrades').html('<b>' + grades.join('</b>, <b>') + '</b>');
            }
        };

        {% for grade in bulletin_config.SUPPORTED_GRADES %}
            $('#grade{{ grade }}').on('change', previewGrades);
        {% endfor %}

        previewTitle();
        previewContent();
        previewGrades();
    </script>
{% endblock %}
